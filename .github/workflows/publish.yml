name: Publish Python Package

on:
  release:
    types: [created, published] # For future automatic releases
  workflow_dispatch:
    inputs:
      tag:
        description: 'The git tag to build and publish (e.g., v0.1.3)'
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # For release events, github.ref is the tag.
          # For manual runs, we use the tag provided in the input.
          ref: ${{ github.event_name == 'release' && github.ref || github.event.inputs.tag }}
          fetch-depth: 0 # This ensures all tags and history are fetched
          fetch-tags: true

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine setuptools_scm

      - name: Verify Version Number
        id: verify_version
        run: echo "version=$(python -m setuptools_scm)" >> $GITHUB_OUTPUT

      - name: "Build package (version ${{ steps.verify_version.outputs.version }})"
        run: python -m build

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --skip-existing dist/*
